# Workflow for demoproject .
# Author - Sagar Chande (CHN), 
# This workflow contains a multiple jobs called "enforce-changelog", "release" and "doxygen"
# "enforce-changelog" job needs git event as "pull-request" to master
# "doxygen" job depends on succesful running of "release" job
# "doxygen" job uses Doxyfile in project ./HMI_Projekt/ path. There are three different doxyfiles "Doxyfile", "DoxyfileF7xx" and "DoxyfileH7xx"
# Please select the correct required doxyfile in doxyfile-path: variable in job doxygen. based on this selection documentation for different configurations (F7xx, H7xx) will be generated
# in default Doxyfile, documentation for F7xx configuration will be generated

name: demoproject Workflow

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch demo
on:
  push:
    branches: 
        - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:


# enforce-changelog job is responsible to monitor the CHANGELOG.md file before pull-rquest to master
# Pull request will not be succeeded if CHANGELOG.md file is not changed/updated
# this job compares existing CHANGELOG.md file in master and CHANGELOG.md file in project structure which is about to pull in master
#  enforce-changelog:
#    if: github.event_name == 'push'
#    runs-on: ubuntu-latest
#    steps:
#    - name: changelogreader
#      uses: dangoslen/changelog-enforcer@v2
#      with:
#        changeLogPath: 'CHANGELOG.md'
#        skipLabels: 'Skip-Changelog'
#        missingUpdateErrorMessage: >
#          Changelog Enforcer: No update to CHANGELOG.md found!
#          Please read the Release.md (https://github.com/LorchAW/S4_M4/blob/master/docs/Release.md).



# release job is responsible to release a pre-release version/tag with name "latest"
# there are 4 steps in this Job
# Depending on pre-release / release version, two of them runs successfully each time this job is being called upon
# Other two runs with a warning that respective artifacts not found
# to decide pre-release/release version, CHANGELOG.md file has been read								 
# if "unrelease" tag in CHANGELOG.md and no "v" before version number, then pre-release version: for eg. ## unreleased
#																										 ## [1.0.0] - yyyy-mm-dd
#
# else "v" before version number without unreleased tag, it will be a release version:           for eg. ## [v1.0.0] - yyyy-mm-dd
  release:
   if: github.event_name == 'push'
    # The type of runner that the job will run on
   runs-on: ubuntu-latest
   outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
# Steps represent a sequence of tasks that will be executed as part of the job
   steps:
# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
   - name: checkout
     uses: actions/checkout@v2

# run a build script for assert preparation
#   - name: build script run 
#     run: |
#        chmod +x "${GITHUB_WORKSPACE}/build.sh"
#        sh "${GITHUB_WORKSPACE}/build.sh" ${GITHUB_WORKSPACE}

   - name: To create an environmental variable with the toolchain path provide a name via the `path-env-var` input
     uses: carlosperate/arm-none-eabi-gcc-action@v1
     with:
         path-env-var: ARM_NONE_EABI_GCC_PATH

   - name: The path will be exported to that environmental variable name
     run: echo "The output path is $ARM_NONE_EABI_GCC_PATH"
      
# run a build script for assert preparation
   - name: build script run 
     run: |
         $ARM_NONE_EABI_GCC_PATH/arm-none-eabi-size ${GITHUB_WORKSPACE}/Build/BF36_H753IIT6_BL/HMI_Projekt.elf
#        $ARM_NONE_EABI_GCC_PATH/arm-none-eabi-size.exe ${GITHUB_WORKSPACE}/Build/BF36_H753IIT6_BL/HMI_Projekt.elf
 