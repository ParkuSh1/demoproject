# Workflow for demoproject .
# Author - Sagar Chande (CHN), Lorch Schweisstechnik GmbH
# This workflow contains a multiple jobs called "enforce-changelog", "release" and "doxygen"
# "enforce-changelog" job needs git event as "pull-request" to master
# "doxygen" job depends on succesful running of "release" job
# "doxygen" job uses Doxyfile in project ./HMI_Projekt/ path. There are three different doxyfiles "Doxyfile", "DoxyfileF7xx" and "DoxyfileH7xx"
# Please select the correct required doxyfile in doxyfile-path: variable in job doxygen. based on this selection documentation for different configurations (F7xx, H7xx) will be generated
# in default Doxyfile, documentation for F7xx configuration will be generated

name: demoproject Workflow

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 
        - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

# enforce-changelog job is responsible to monitor the CHANGELOG.md file before pull-rquest to master
# Pull request will not be succeeded if CHANGELOG.md file is not changed/updated
# this job compares existing CHANGELOG.md file in master and CHANGELOG.md file in project structure which is about to pull in master
  enforce-changelog:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: dangoslen/changelog-enforcer@v2
      with:
        changeLogPath: 'CHANGELOG.md'
        skipLabels: 'Skip-Changelog'
        missingUpdateErrorMessage: >
          Changelog Enforcer: No update to CHANGELOG.md found!
          Please read the Release.md (https://github.com/LorchAW/S4_M4/blob/master/docs/Release.md).

# release job is responsible to release a pre-release version/tag with name "latest"
# there are 4 steps in this Job
# Depending on pre-release / release version, two of them runs successfully each time this job is being called upon
# Other two runs with a warning that respective artifacts not found
# to decide pre-release/release version, CHANGELOG.md file has been read								 
# if "unrelease" tag in CHANGELOG.md and no "v" before version number, then pre-release version: for eg. ## unreleased
#																										 ## [1.0.0] - yyyy-mm-dd
#
# else "v" before version number without unreleased tag, it will be a release version:           for eg. ## [v1.0.0] - yyyy-mm-dd
  release:
   if: github.event_name == 'push'
    # The type of runner that the job will run on
   runs-on: ubuntu-latest
# Steps represent a sequence of tasks that will be executed as part of the job
   steps:
# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
   - name: checkout
     uses: actions/checkout@v2

   - name: Delete last Pre-Release
     if: ( ! startsWith(github.ref, 'refs/tags/v'))
     uses: docker://antonyurchenko/git-release:latest
     env:
       RELEASE_NAME: "Latest"
       UNRELEASED: delete
       PRE_RELEASE: true
       DRAFT_RELEASE: true
     with:
       args: download/*.zip

# Delete the last "latest" release version tag (and not pre-released one) if exists
   - name: Delete tag latest
     if: ( ! startsWith(github.ref, 'refs/tags/v'))
     run: (git tag -d latest && git push origin :refs/tags/latest) || true

# run a bash script
   - name: run a script to extract version
     run: |
         chmod +x "${GITHUB_WORKSPACE}/.github/workflows/script.sh"
         bash "${GITHUB_WORKSPACE}/.github/workflows/script.sh" ${GITHUB_WORKSPACE} ChangeLogVersion 

# retrieve version
   - name: Retrieve version
     env:
       ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
     run: |
          echo "::set-env name=TAG_NAME::$(grep -m1 '##' "${GITHUB_WORKSPACE}/CHANGELOG.md" | awk '{for(i=1; i<=NF; i++) if($i~/##/) print $(i+1)}')"
#echo "TAG_NAME=$(grep -m1 '##' ${GITHUB_WORKSPACE}/CHANGELOG.md | awk '{for(i=1; i<=NF; i++) if($i~/##/) print $(i+1)}')" >> $GITHUB_ENV
#echo "TAG_NAM=$(grep -m1 '##' ${GITHUB_WORKSPACE}/CHANGELOG.md | awk '{for(i=1; i<=NF; i++) if($i~/##/) print $(i+1)}')" >> $GITHUB_ENV
#echo "::set-output name=TAG_NAME::$(grep -m1 '##' ${GITHUB_WORKSPACE}/CHANGELOG.md | awk '{for(i=1; i<=NF; i++) if($i~/##/) print $(i+1)}')"

#echo::set-env name=TAG_NAME::$(grep -m1 '##' "${GITHUB_WORKSPACE}/CHANGELOG.md" | awk '{for(i=1; i<=NF; i++) if($i~/##/) print $(i+1)}')

# create a new pre-Release version
   - name: Pre-Release
     if: (! startsWith(github.ref, 'refs/tags/v')) 
     uses: docker://antonyurchenko/git-release:latest
     env:
       #GITHUB_TOKEN: ${{ secrets.token }}
       RELEASE_NAME: "0.0.6"  #${{ env.TAG_NAME }}"
       UNRELEASED: update
       PRE_RELEASE: true
       DRAFT_RELEASE: false
     with:
       args: download/*.zip

# create a new released version
   - name: Release
     if: startsWith(github.ref, 'refs/tags/v')  
     uses: docker://antonyurchenko/git-release:latest
     env:
       RELEASE_NAME: "${{ env.TAG_NAME }}"
       PRE_RELEASE: false
       DRAFT_RELEASE: false
     with:
       args: download/*.zip
        

